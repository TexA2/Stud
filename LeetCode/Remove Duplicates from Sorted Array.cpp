/*
Учитывая номера целочисленного массива, отсортированные в порядке возрастания,
удалите дубликаты на месте таким образом, чтобы каждый уникальный элемент появлялся только один раз.
Относительный порядок элементов должен быть сохранен прежним.
Затем верните количество уникальных элементов в числах.

Считайте, что количество уникальных элементов nums равно k, чтобы их приняли, вам нужно выполнить следующие действия :

Измените массив nums таким образом, чтобы первые k элементов nums содержали уникальные элементы в том порядке,
в котором они присутствовали в nums изначально.
Остальные элементы nums не важны, так же как и размер nums.

Верните k.

Пример 1:
	Input: nums = [1, 1, 2]
	Output : 2, nums = [1, 2, _]
	Пояснение : Ваша функция должна возвращать k = 2, причем первые два элемента nums равны 1 и 2 соответственно.
	Не имеет значения, что вы оставляете за пределами возвращаемого k(следовательно, это символы подчеркивания).


Пример 2 :
	Input : nums = [0, 0, 1, 1, 1, 2, 2, 3, 3, 4]
	Output : 5, nums = [0, 1, 2, 3, 4, _, _, _, _, _]
	Пояснение : Ваша функция должна возвращать k = 5, причем первые пять элементов nums равны 0, 1, 2, 3 и 4 соответственно.
	Не имеет значения, что вы оставляете за пределами возвращаемого k(следовательно, это символы подчеркивания).
*/
#include <iostream>
#include <vector>
#include <Algorithm>

using namespace std;

class Solution {
public:
	int removeDuplicates(vector<int>& nums) {
		auto iter = std::unique(nums.begin(), nums.end());
		nums.resize(distance(nums.begin(), iter));
		return nums.size();
	}
};

int main() {


	vector<int>nums{ 0, 0, 1, 1, 1, 2, 2, 3, 3, 4 };

	Solution test;
	test.removeDuplicates(nums);

	for (auto x : nums)
		cout << x << " ";


	return 0;
}
